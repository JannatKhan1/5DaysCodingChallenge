Problem: Find Duplicates in an Array
Given an array a of size N which contains elements from 0 to N-1, you need to find all the elements occurring more than once in the given array. Return the answer in ascending order. If no such element is found, return list containing [-1].
Solution:
Logic :
1. Make 2 Hashsets. Advantage of set is it doesn't contain duplicates.
2. 1 HashSet is seenSet and other is duplicateSet. seenSet stores visited elements and duplicateSet stores duplicate elements.
3. Check if the element is present in seenSet:
 if NO: add it to seenSet
 if YES: add it to duplicateSet
4. Check if duplicateSet is empty,if so then add -1
5. Sort the duplicateSet after converting it into Array. Return Array

Lessons Learnt:
1. The T.C. of HashSet is O(1) for average case and O(n) for worst case.For ArrayList: O(n) for contains or indexOf since it needs to iterate through the list.
2. To sort HashSet, we have to convert it into Array first.
3. ArrayList can dynamically expand or shrink and it can take different datatypes as well.

Methods Learnt:
1. add(): method common to ArrayList and HashSet. As name suggests, it adds elements.
2.isEmpty(): returns boolean and check if ArrayList/HashSet is empty.
3. toArray(): convert the HashSet to Array
4. sort(): sort the given Array
5. asList(): takes Array as parameter and return fixed-size list.
